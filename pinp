#!/bin/bash
#
# pinp - plays local files and streaming video in a picture-in-picture window
#
# This script requires mpv and youtube-dl
#

PROGRAM=$(basename $0)


# Config file 
USER_CONF="$HOME/.config/pinp/pinp.conf"
SYSTEM_CONF="/etc/pinp/pinp.conf.default"


# Source config from home directory if exists...
if [[ -f $USER_CONF ]]; then
       . $USER_CONF
else
       #...else source settings from system config
       . $SYSTEM_CONF
fi




play_local()
{
        mpv $mpv_options "$1"
}

stream_url()
{
        mpv $mpv_options --ytdl-format $FORMAT "$1" 
}

stream_search()
{
    mpv $mpv_options $(youtube-dl --format $FORMAT --dateafter $DATE --get-url "$VIDEO_SEARCH$VIDEO_NO:$1") 
}

usage()
{
    printf "\nThis is $PROGRAM: a script for playing picture-in-picture video.\n"
    printf "\nAt a minimum, you need to specify a file, search term or URL.\n\n"
    printf "The following options are also available:\n\n\n"
    printf '%-20s%-60s \n' "-n" "queue up n number of streams from search"
    printf '%-20s%-60s \n' "-p" "set initial video position: 1=top left, 2=top right, 3=bottom left, 4=bottom right"
    printf '%-20s%-60s \n' "-s, -m, -l" "set size of picture-in-picture video (small, medium, large)"
    printf '%-20s%-60s \n\n' "-f" "select the source to search: yt=youtube, gv=google video"
    printf "\n USAGE: $PROGRAM [options] <file, search or URL to stream>\n\n"
    printf "For per-user settings, copy '/etc/pinp/pinp.conf.default' to '~/.config/pinp/pinp.conf' and modify as needed\n\n"
    printf "To play selected URLs from clipboard assign a keyboard shorcut to the pipurl script"

    exit
}



# Check for options
while getopts ":n:f:p:sml" OPTION
do
        case $OPTION in

                n) VIDEO_NO=$OPTARG;;
                f) VIDEO_SEARCH="${OPTARG}search";;
                s) SIZE="$SMALL_VID";;
                m) SIZE="$MED_VID";;
                l) SIZE="$LARGE_VID";;

                p) p=$OPTARG     
                   ((p == 1)) && POSITION=$TOP_LEFT    
                   ((p == 2)) && POSITION=$TOP_RIGHT
                   ((p == 3)) && POSITION=$BOTTOM_LEFT
                   ((p == 4)) && POSITION=$BOTTOM_RIGHT
                   ((p == 1 || p == 2 || p == 3 || p == 4)) || usage
                   ;;

                *) usage;;

        esac
done


# Shift options along so content is first argument
shift $((OPTIND - 1))


# Exit if no content specified
if [[ $# -eq 0 ]]; then
        usage
fi

# Set basic options to enable mpv picture-in-picture mode
mpv_options="--ontop --no-border --on-all-workspaces --autofit=$SIZE --geometry=$POSITION"

# Make format more flexible for google video search
if [[ "$VIDEO_SEARCH" -eq "gvsearch" ]]; then
        FORMAT="[height<=?720]"
fi


# Stream content
if [[ "$1" =~ ^"http" ]]; then
        stream_url "$1"
elif [[ -f "$1" ]]; then
        play_local "$1"
else
        stream_search "$1"
fi 


